version: 1
objects:
  queue: # Create multiple queue if you need
    class: queue.Queue
    maxsize: 1000

formatters:
  simple: # formatter for log file
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  simple_color: # formatter for console log
    class: colorlog.ColoredFormatter
    format: '%(log_color)s%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  slack: # formatter for slack
    class: slack_logger.SlackFormatter

handlers:
  elk:
    class: cow.logging_.ELKHandler
    level: INFO

  slack:
    class: slack_logger.SlackHandler
    level: DEBUG
    url: https://hooks.slack.com/services/T01C83395QT/B01C4Q256PP/xxx # Replace with your webhook
    formatter: slack

  console:
    class: colorlog.StreamHandler
    level: DEBUG
    formatter: simple_color
    stream: ext://sys.stdout

  file:
    class: logging.handlers.RotatingFileHandler
    filename: '/tmp/log.log'
    formatter: simple
    maxBytes: 10485760 # 10MB
    backupCount: 20 # keep last 20 file
    encoding: utf8

  queue_listener:
    class: cow.logging_.QueueListenerHandler
    respect_handler_level: true
    handlers:
      - cfg://handlers.console
      - cfg://handlers.file
      - cfg://handlers.elk
    queue: cfg://objects.queue
loggers:
  slack_logger:
    level: DEBUG
    handlers:
      - slack
    propagate: false

  logger1:
    level: DEBUG
    handlers:
      - console
    propagate: false

  logger2:
    level: WARNING
    handlers:
      - file
    propagate: false

  logger3:
    level: DEBUG
    handlers:
      - queue_listener
    propagate: false

root:
  level: INFO
  handlers:
    - console
    - file
  propogate: true